/*! powered by https://github.com/snowdreams1006 
 */
!function(e){var n={};function o(t){if(n[t])return n[t].exports;var r=n[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,o),r.l=!0,r.exports}o.m=e,o.c=n,o.d=function(e,n,t){o.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,n){if(1&n&&(e=o(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(o.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)o.d(t,r,function(n){return e[n]}.bind(null,r));return t},o.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(n,"a",n),n},o.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},o.p="",o(o.s=0)}([function(e,n){e.exports={hooks:{init:function(){console.log("init")},"page:before":function(e){console.log("page:before",e);var n=this.book,o=n.config.get("title","Default Value");console.log("init:title",o);var t=n.resolve("README.md");return console.log("init:README.md",t),n.renderInline("markdown","This is **Markdown**").then(function(e){console.log("init:renderInline",e)}),n.renderBlock("markdown","* This is **Markdown**").then(function(e){console.log("init:renderBlock",e)}),e},page:function(e){return console.log("page",e),e},"finish:before":function(){console.log("finish:before")},finish:function(){console.log("finish");var e=output.root();console.log("finish:root",e)}}}}]);
//# sourceMappingURL=bundle.js.map